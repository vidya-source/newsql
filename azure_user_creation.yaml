- name: Fetch Pending ServiceNow Requests
  hosts: localhost
  gather_facts: no
  vars:
    servicenow_instance: "https://dev247928.service-now.com"
    servicenow_username: "{{ service_now_username }}"
    servicenow_password: "{{ service_now_password }}"
    tenant_id: "{{ azure_tenant_id }}"
    client_id: "{{ azure_client_id }}"
    client_secret: "{{ azure_client_secret }}"
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"
    default_user_email: "vidya@gmail.com"
    default_user_name: "VidyaRa"
    default_mail_nickname: "vidya"
    domain_name: "amitomar63gmail.onmicrosoft.com"

  tasks:
    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response

    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"
        suffix_count: 0
        current_nickname: "{{ default_mail_nickname }}"
        user_available: false

    # First check if the original username is available
    - name: Check if original user exists in Azure AD
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ current_nickname }}@{{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: original_check
      ignore_errors: yes

    - name: Set availability flag for original username
      set_fact:
        user_available: "{{ original_check.status == 404 }}"

    # Start an incremental search if original is not available
    - name: Increment suffix count
      set_fact:
        suffix_count: "{{ suffix_count | int + 1 }}"
        current_nickname: "{{ default_mail_nickname }}{{ suffix_count | int }}"
      when: not user_available

    # Use a task with until to keep trying incremented usernames
    - name: Check if incremented username exists
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ current_nickname }}@{{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: incremented_check
      ignore_errors: yes
      when: not user_available
      until: incremented_check.status == 404
      retries: 9999
      delay: 1

    # After each check, if not available, increment the counter for next iteration
    - name: Increment for next iteration
      set_fact:
        suffix_count: "{{ suffix_count | int + 1 }}"
        current_nickname: "{{ default_mail_nickname }}{{ suffix_count | int }}"
      when: not user_available and incremented_check.status == 200
      until: incremented_check.status == 404
      retries: 9999
      delay: 1

    # Once available username is found, update the flag
    - name: Update availability flag
      set_fact:
        user_available: true
        current_nickname: "{{ current_nickname }}"
      when: not user_available and incremented_check.status == 404

    - name: Debug - Final username selection
      debug:
        msg: "Selected username: {{ current_nickname }}@{{ domain_name }}"

    - name: Create User in Azure AD with available username
      uri:
        url: "{{ graph_api_endpoint }}/users"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: true
          displayName: "{{ default_user_name }}"
          mailNickname: "{{ current_nickname }}"
          userPrincipalName: "{{ current_nickname }}@{{ domain_name }}"
          passwordProfile:
            forceChangePasswordNextSignIn: true
            password: "Default@1234"
        body_format: json
        status_code: [201]
      register: user_creation
