- name: Fetch Pending ServiceNow Requests
  hosts: localhost
  gather_facts: no
  vars:
    servicenow_instance: "https://dev247928.service-now.com"
    servicenow_username: "admin"
    servicenow_password: "%ml4Vs9RXE/s"
    servicenow_table: "sc_request"
    tenant_id: "195e8969-c853-47b4-83d0-36e044d83923"
    client_id: "e2e46ae3-2dee-4eed-a074-ddffd760ab2b"
    client_secret: "PQZ8Q~XSmMsU4dbgk2KyWMHK1h8X7ciD~H.1_csi"
    default_user_email: "vidya@domain.com"
    default_user_name: "VidyaRa"
    default_mail_nickname: "vidya"
    domain_name: "amitomar63gmail.onmicrosoft.com"
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"
    max_attempts: 100  # Maximum attempts for unique username
  tasks:
    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response

    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"

    # First check if the default username is available
    - name: Check if default username exists in Azure AD
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}@{{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: default_user_check
      ignore_errors: yes

    # Use default if available, otherwise set available_nickname later
    - name: Set username variables
      set_fact:
        available_nickname: "{% if default_user_check.status is defined and default_user_check.status == 404 %}{{ default_mail_nickname }}{% else %}not_set_yet{% endif %}"

    # Only run this section if default username is not available
    - name: Find available alternative username
      block:
        - name: Check username with number
          uri:
            url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}{{ item }}@{{ domain_name }}"
            method: GET
            headers:
              Authorization: "Bearer {{ access_token }}"
              Content-Type: "application/json"
            status_code: [200, 404]
            return_content: yes
          register: username_result
          ignore_errors: yes
          with_sequence: start=1 end=10  # Try first 10 numbers
          when: available_nickname == "not_set_yet"
        
        - name: Set available nickname from results
          set_fact:
            available_nickname: "{{ default_mail_nickname }}{{ item.item }}"
          with_items: "{{ username_result.results }}"
          when: 
            - available_nickname == "not_set_yet"
            - item.status is defined 
            - item.status == 404
          loop_control:
            label: "{{ default_mail_nickname }}{{ item.item }}"
          run_once: true
      when: default_user_check.status is defined and default_user_check.status == 200

    - name: Debug - Selected username
      debug:
        msg: "Selected username: {{ available_nickname }}@{{ domain_name }}"

    - name: Create User in Azure AD with available username
      uri:
        url: "{{ graph_api_endpoint }}/users"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: true
          displayName: "{{ default_user_name }}"
          mailNickname: "{{ available_nickname }}"
          userPrincipalName: "{{ available_nickname }}@{{ domain_name }}"
          passwordProfile:
            forceChangePasswordNextSignIn: true
            password: "Default@1234"
        body_format: json
        status_code: [201]
      register: user_creation
      when: available_nickname != "not_set_yet"
