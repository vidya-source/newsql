- name: Fetch Pending ServiceNow Requests
  hosts: localhost
  gather_facts: no
  vars:
    servicenow_instance: "https://dev247928.service-now.com"
    servicenow_username: "{{ service_now_username }}"
    servicenow_password: "{{ service_now_password }}"
    tenant_id: "{{ azure_tenant_id }}"
    client_id: "{{ azure_client_id }}"
    client_secret: "{{ azure_client_secret }}"
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"
    default_user_email: "vidya@gmail.com"
    default_user_name: "VidyaRa"
    default_mail_nickname: "vidya"
    domain_name: "amitomar63gmail.onmicrosoft.com"

  tasks:
    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response

    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"

    # Check original username
    - name: Check if original user exists in Azure AD
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}@{{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: original_user_check
      ignore_errors: yes

    # Set appropriate nickname based on original check
    - name: Set original nickname if user doesn't exist
      set_fact:
        current_nickname: "{{ default_mail_nickname }}"
        username_found: true
      when: original_user_check.status == 404

    # Check username1 if original exists
    - name: Check username1
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}1@{{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: user_check1
      ignore_errors: yes
      when: original_user_check.status == 200

    - name: Set nickname to username1
      set_fact:
        current_nickname: "{{ default_mail_nickname }}1"
        username_found: true
      when: original_user_check.status == 200 and user_check1.status == 404

    # Check username2 if username1 exists
    - name: Check username2
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}2@{{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: user_check2
      ignore_errors: yes
      when: original_user_check.status == 200 and user_check1 is defined and user_check1.status == 200

    - name: Set nickname to username2
      set_fact:
        current_nickname: "{{ default_mail_nickname }}2"
        username_found: true
      when: original_user_check.status == 200 and user_check1 is defined and user_check1.status == 200 and user_check2.status == 404

    # Check username3 if username2 exists
    - name: Check username3
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}3@{{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: user_check3
      ignore_errors: yes
      when: original_user_check.status == 200 and user_check1 is defined and user_check1.status == 200 and user_check2 is defined and user_check2.status == 200

    - name: Set nickname to username3
      set_fact:
        current_nickname: "{{ default_mail_nickname }}3"
        username_found: true
      when: original_user_check.status == 200 and user_check1 is defined and user_check1.status == 200 and user_check2 is defined and user_check2.status == 200 and user_check3.status == 404

    # Check username4 if username3 exists
    - name: Check username4
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}4@{{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: user_check4
      ignore_errors: yes
      when: original_user_check.status == 200 and user_check1 is defined and user_check1.status == 200 and user_check2 is defined and user_check2.status == 200 and user_check3 is defined and user_check3.status == 200

    - name: Set nickname to username4
      set_fact:
        current_nickname: "{{ default_mail_nickname }}4"
        username_found: true
      when: original_user_check.status == 200 and user_check1 is defined and user_check1.status == 200 and user_check2 is defined and user_check2.status == 200 and user_check3 is defined and user_check3.status == 200 and user_check4.status == 404

    # Check username5 if username4 exists
    - name: Check username5
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}5@{{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: user_check5
      ignore_errors: yes
      when: original_user_check.status == 200 and user_check1 is defined and user_check1.status == 200 and user_check2 is defined and user_check2.status == 200 and user_check3 is defined and user_check3.status == 200 and user_check4 is defined and user_check4.status == 200

    - name: Set nickname to username5
      set_fact:
        current_nickname: "{{ default_mail_nickname }}5"
        username_found: true
      when: original_user_check.status == 200 and user_check1 is defined and user_check1.status == 200 and user_check2 is defined and user_check2.status == 200 and user_check3 is defined and user_check3.status == 200 and user_check4 is defined and user_check4.status == 200 and user_check5.status == 404

    - name: Debug - Final username selection
      debug:
        msg: "Selected username: {{ current_nickname | default(default_mail_nickname) }}@{{ domain_name }}"

    - name: Create User in Azure AD with available username
      uri:
        url: "{{ graph_api_endpoint }}/users"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: true
          displayName: "{{ default_user_name }}"
          mailNickname: "{{ current_nickname | default(default_mail_nickname) }}"
          userPrincipalName: "{{ current_nickname | default(default_mail_nickname) }}@{{ domain_name }}"
          passwordProfile:
            forceChangePasswordNextSignIn: true
            password: "Default@1234"
        body_format: json
        status_code: [201]
      register: user_creation
      when: username_found is defined
