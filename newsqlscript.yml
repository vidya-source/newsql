---
- name: MySQL Health Check Playbook
  hosts: localhost
  become: no
  gather_facts: no
  vars:
    mysql_user: "mysqlauto"
    mysql_password: "mysqlAutomation"
    mysql_cmd: "mysql -u{{ mysql_user }} -p{{ mysql_password }} -N -B"
  
  tasks:
    - name: Create timestamp
      ansible.builtin.set_fact:
        timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}"

    - name: Get Database Sizes
      ansible.builtin.shell: |
        {{ mysql_cmd }} -e "
        SELECT 
          table_schema AS 'Database',
          ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS 'Size_MB'
        FROM information_schema.tables
        GROUP BY table_schema;"
      register: db_sizes
      ignore_errors: yes

    - name: Check for Deadlocks
      ansible.builtin.shell: |
        {{ mysql_cmd }} -e "SHOW ENGINE INNODB STATUS\G"
      register: deadlock_status
      ignore_errors: yes

    - name: Get Running Processes
      ansible.builtin.shell: |
        {{ mysql_cmd }} -e "
        SELECT 
          id,
          user,
          host,
          db,
          command,
          time,
          state,
          info
        FROM information_schema.processlist
        WHERE command != 'Sleep';"
      register: process_list
      ignore_errors: yes

    - name: Check Event Scheduler Status
      ansible.builtin.shell: |
        {{ mysql_cmd }} -e "
        SELECT 
          event_name,
          status,
          last_executed,
          starts,
          ends
        FROM information_schema.events;"
      register: event_status
      ignore_errors: yes

    - name: Create Report Directory
      ansible.builtin.file:
        path: "./mysql_reports"
        state: directory
        mode: '0755'

    - name: Generate Health Report
      ansible.builtin.copy:
        content: |
          MySQL Health Report - {{ timestamp }}
          ================================================

          Database Space Utilization
          -------------------------
          {{ db_sizes.stdout if db_sizes.stdout is defined else 'Query failed' }}

          Deadlock Information
          -------------------
          {{ deadlock_status.stdout if deadlock_status.stdout is defined else 'Query failed' }}

          Running Processes
          ----------------
          {{ process_list.stdout if process_list.stdout is defined else 'Query failed' }}

          Event Scheduler Status
          ---------------------
          {{ event_status.stdout if event_status.stdout is defined else 'Query failed' }}
        dest: "./mysql_reports/mysql_health_report_{{ timestamp }}.txt"
        mode: '0644'

    - name: Display Report Location
      debug:
        msg: "MySQL health report has been generated at ./mysql_reports/mysql_health_report_{{ timestamp }}.txt"
