---
- name: MySQL Health Check and Monitoring
  hosts: localhost
  gather_facts: no
  vars:
    mysql_host: "10.112.0.11"
    mysql_database: "information_schema"
    mysql_username: "mysqlauto"
    mysql_password: "mysqlAutomation"
    mysql_port: "3306"

  tasks:
    - name: Install MySQL client (Debian/Ubuntu)
      apt:
        name: mysql-client
        state: present
      when: ansible_os_family == "Debian"

    - name: Install MySQL client (CentOS/RHEL)
      yum:
        name: mysql
        state: present
      when: ansible_os_family == "RedHat"

    - name: Check database space utilization
      shell: |
        mysql --host={{ mysql_host }} --user={{ mysql_username }} --password={{ mysql_password }} --database={{ mysql_database }} -e "
          SELECT table_schema AS DatabaseName,
                 SUM(data_length + index_length) / 1024 / 1024 AS TotalSizeMB
          FROM information_schema.tables
          GROUP BY table_schema;"
      register: db_space

    - name: Display database space utilization
      debug:
        msg: "üìä Database Space Utilization: {{ db_space.stdout }}"

    - name: Check for deadlocks in MySQL
      shell: |
        mysql --host={{ mysql_host }} --user={{ mysql_username }} --password={{ mysql_password }} --database={{ mysql_database }} -e "SHOW ENGINE INNODB STATUS;"
      register: deadlocks

    - name: Display deadlock information
      debug:
        msg: "üö® Deadlocks: {{ deadlocks.stdout }}"

    - name: Check MySQL event scheduler activities
      shell: |
        mysql --host={{ mysql_host }} --user={{ mysql_username }} --password={{ mysql_password }} --database={{ mysql_database }} -e "
          SELECT event_name, status
          FROM information_schema.events
          WHERE status = 'ENABLED';"
      register: job_activities

    - name: Display MySQL event activities
      debug:
        msg: "üõ† MySQL Event Activities: {{ job_activities.stdout }}"

    - name: Check MySQL health status
      shell: |
        mysql --host={{ mysql_host }} --user={{ mysql_username }} --password={{ mysql_password }} --database={{ mysql_database }} -e "SHOW STATUS LIKE 'Threads_connected';"
      register: db_health

    - name: Display database health check
      debug:
        msg: "ü©∫ Database Health Check: {{ db_health.stdout }}"

    - name: Execute remote command to check MySQL version via SSH
      shell: |
        mysql --host={{ mysql_host }} --user={{ mysql_username }} --password={{ mysql_password }} -e 'SELECT VERSION();'
      register: mysql_version

    - name: Display MySQL version (via SSH)
      debug:
        msg: "[‚ÑπÔ∏è] MySQL Version (via SSH): {{ mysql_version.stdout }}"
