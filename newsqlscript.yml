---
- name: Fetch Pending ServiceNow Requests and Process Approvals
  hosts: localhost
  gather_facts: no
  vars:
    servicenow_instance: "https://dev247928.service-now.com"
    servicenow_username: "admin"
    servicenow_password: "%ml4Vs9RXE/s"
    servicenow_table: "sc_request"
    tenant_id: "195e8969-c853-47b4-83d0-36e044d83923"
    client_id: "e2e46ae3-2dee-4eed-a074-ddffd760ab2b"
    client_secret: "{{client_secret}}"
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"
    approval_table: "sc_request_approval"
    license_assignment_table: "license_assignment"
  
  tasks:
    - name: Fetch pending requests from ServiceNow
      uri:
        url: "{{ servicenow_instance }}/api/now/table/{{ servicenow_table }}"
        method: GET
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        return_content: yes
      register: servicenow_response

    - name: Display request details
      debug:
        msg: |
          {% for request in servicenow_response.json.result %}
          Request Number: {{ request.get('number', 'N/A') }}
          Requested License Type: {{ request.get('short_description', 'Not Provided') }}
          Status: {{ request.get('approval', 'Pending') }}
          ------------------------------------------------
          {% endfor %}
      
    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response

    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"
    
    - name: Check License Availability in Azure
      uri:
        url: "{{ graph_api_endpoint }}/subscribedSkus"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        return_content: yes
      register: azure_license_response
    
    - name: Add dummy license data for testing (remove this after you have real licenses)
      set_fact:
        azure_license_response:
          json:
            value:
              - id: "dummy-license-1"
                skuPartNumber: "TEST_LICENSE_1"
                prepaidUnits:
                  enabled: 5
                consumedUnits: 3
              - id: "dummy-license-2"
                skuPartNumber: "TEST_LICENSE_2"
                prepaidUnits:
                  enabled: 10
                consumedUnits: 7  
    
    - name: Fetch approvals from ServiceNow
      uri:
        url: "{{ servicenow_instance }}/api/now/table/{{ approval_table }}?sysparm_query=state=in_progress"
        method: GET
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        return_content: yes
      register: approval_response
    
    - name: Process approvals
      debug:
        msg: |
          {% for approval in approval_response.json.result %}
          Approval ID: {{ approval.get('sys_id', 'N/A') }}
          Request Number: {{ approval.get('request', 'N/A') }}
          Approval Status: {{ approval.get('state', 'Pending') }}
          ------------------------------------------------
          {% endfor %}
    
    - name: Assign License if Approved
      uri:
        url: "{{ servicenow_instance }}/api/now/table/{{ license_assignment_table }}"
        method: POST
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        body:
          request_number: "{{ item.request }}"
          assigned_license: "{{ item.short_description }}"
          status: "Assigned"
        body_format: json
        return_content: yes
      with_items: "{{ approval_response.json.result | selectattr('state', 'equalto', 'approved') | list }}"
      register: license_assignment_response
    
    - name: Update ServiceNow request status to complete
      uri:
        url: "{{ servicenow_instance }}/api/now/table/{{ servicenow_table }}/{{ item.request }}"
        method: PATCH
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        body:
          state: "Completed"
        body_format: json
      with_items: "{{ approval_response.json.result | selectattr('state', 'equalto', 'approved') | list }}"
