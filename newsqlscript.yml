---
- name: Check MySQL Server Health
  hosts: 10.112.0.9
  gather_facts: no
  vars:
    mysql_host: "10.112.0.9"
    mysql_user: "mysqlauto"
    mysql_password: "mysqlAutomation"
    mysql_port: 22

  tasks:
    - name: Get Database Space Utilization
      shell: |
        query="SELECT table_schema AS DatabaseName,
                      SUM(data_length + index_length) / 1024 / 1024 AS SizeMB
               FROM information_schema.tables
               GROUP BY table_schema;"
        mysql -h {{ mysql_host }} -u {{ mysql_user }} -p{{ mysql_password }} -P {{ mysql_port }} -e "$query" --skip-column-names --batch --silent | jq -R -s -c 'split("\n") | map(select(length > 0)) | map({"DatabaseName": .[0], "SizeMB": .[1]})'
      register: db_space
      ignore_errors: yes

    - name: Get Database Health
      shell: |
        query="SELECT schema_name AS DatabaseName,
                      IF(SUM(data_free) > 0, 'Unhealthy', 'Healthy') AS Status,
                      COUNT(*) AS ActiveConnections
               FROM information_schema.processlist
               JOIN information_schema.schemata ON processlist.db = schemata.schema_name
               GROUP BY schema_name;"
        mysql -h {{ mysql_host }} -u {{ mysql_user }} -p{{ mysql_password }} -P {{ mysql_port }} -e "$query" --skip-column-names --batch --silent | jq -R -s -c 'split("\n") | map(select(length > 0)) | map({"DatabaseName": .[0], "Status": .[1], "ActiveConnections": .[2]})'
      register: db_health
      ignore_errors: yes

    - name: Check for Deadlocks
      shell: |
        query="SHOW ENGINE INNODB STATUS;"
        mysql -h {{ mysql_host }} -u {{ mysql_user }} -p{{ mysql_password }} -P {{ mysql_port }} -e "$query" --skip-column-names --batch --silent | grep -i 'deadlock'
      register: deadlocks
      ignore_errors: yes

    - name: Get MySQL Job Activities
      shell: |
        query="SHOW EVENTS;"
        mysql -h {{ mysql_host }} -u {{ mysql_user }} -p{{ mysql_password }} -P {{ mysql_port }} -e "$query" --skip-column-names --batch --silent | jq -R -s -c 'split("\n") | map(select(length > 0))'
      register: job_activities
      ignore_errors: yes

    - name: Convert Outputs to JSON
      set_fact:
        db_space_fact: "{{ (db_space.stdout | from_json) if db_space.stdout is not none else [] }}"
        db_health_fact: "{{ (db_health.stdout | from_json) if db_health.stdout is not none else [] }}"
        deadlocks_fact: "{{ (deadlocks.stdout | from_json) if deadlocks.stdout is not none else {'Deadlocks': 0} }}"
        job_activities_fact: "{{ (job_activities.stdout | from_json) if job_activities.stdout is not none else [] }}"

    - name: Display Formatted Results
      debug:
        msg: |
          📊 Database Space Utilization:
          {% for item in db_space_fact | default([]) if item.DatabaseName is defined and item.SizeMB is defined %}
           - {{ item.DatabaseName }}: {{ item.SizeMB }} MB
          {% endfor %}
    
          🚨 Deadlocks:
          {% if (deadlocks_fact.Deadlocks | default(0) | int) > 0 %}
           - {{ deadlocks_fact.Deadlocks }} deadlocks detected!
          {% else %}
           - No deadlocks detected
          {% endif %}
    
          [ℹ️] Job activities query returned {{ job_activities_fact | default([]) | length }} rows.
          
          🛠 MySQL Events:
          {% if job_activities_fact | length > 0 %}
            {% for item in job_activities_fact %}
               - Event: {{ item.name }}
                 - Status: {{ item.status | default("Unknown") }}
            {% endfor %}
          {% else %}
            [❌] No events found.
          {% endif %}
    
          🩺 Database Health Check:
          {% if db_health_fact is defined and db_health_fact | length > 0 %}
            {% for item in db_health_fact %}
               - Database: {{ item.DatabaseName }}
                 - Status: {{ item.Status }}
                 - Active Connections: {{ item.ActiveConnections }}
            {% endfor %}
          {% else %}
            [❌] No database health data available.
          {% endif %}
