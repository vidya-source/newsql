---
- name: Manage ServiceNow License Requests
  hosts: localhost
  gather_facts: no
  vars:
    servicenow_instance: "https://dev247928.service-now.com"
    servicenow_username: "admin"
    servicenow_password: "%ml4Vs9RXE/s"
    servicenow_table: "sc_request"
    tenant_id: "195e8969-c853-47b4-83d0-36e044d83923"
    client_id: "e2e46ae3-2dee-4eed-a074-ddffd760ab2b"
    client_secret: "{{client_secret}}"
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"
    approval_group: "Approver_Group"
  
  tasks:
    - name: Fetch pending requests from ServiceNow
      uri:
        url: "{{ servicenow_instance }}/api/now/table/{{ servicenow_table }}"
        method: GET
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        return_content: yes
      register: servicenow_response

    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response

    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"
    
    - name: Check License Availability in Azure
      uri:
        url: "{{ graph_api_endpoint }}/subscribedSkus"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        return_content: yes
      register: azure_license_response

    - name: Process each request
      loop: "{{ servicenow_response.json.result }}"
      loop_control:
        loop_var: request
      tasks:
        - name: Check if request is approved
          uri:
            url: "{{ servicenow_instance }}/api/now/table/{{ servicenow_table }}/{{ request.sys_id }}"
            method: GET
            user: "{{ servicenow_username }}"
            password: "{{ servicenow_password }}"
            force_basic_auth: yes
            return_content: yes
          register: request_status

        - name: Approve or Deny Request
          set_fact:
            approved: "{{ request_status.json.result.approval == 'approved' }}"

        - name: Assign License if Approved
          when: approved
          uri:
            url: "{{ graph_api_endpoint }}/users/{{ request.requested_for }}/assignLicense"
            method: POST
            headers:
              Authorization: "Bearer {{ access_token }}"
              Content-Type: "application/json"
            body:
              addLicenses:
                - skuId: "dummy-license-1"
              removeLicenses: []
            body_format: json
            return_content: yes
          register: license_assignment_response

        - name: Update ServiceNow Request Status
          uri:
            url: "{{ servicenow_instance }}/api/now/table/{{ servicenow_table }}/{{ request.sys_id }}"
            method: PATCH
            user: "{{ servicenow_username }}"
            password: "{{ servicenow_password }}"
            force_basic_auth: yes
            body:
              state: "{{ 'Resolved' if approved else 'Closed Incomplete' }}"
            body_format: json
            return_content: yes

        - name: Notify User
          debug:
            msg: "User {{ request.requested_for }} has been notified: License {{ 'Assigned' if approved else 'Denied' }}"
