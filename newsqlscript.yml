---
- name: Fetch Pending ServiceNow Requests and Process Licensing
  hosts: localhost
  gather_facts: no
  vars:
    servicenow_instance: "https://dev247928.service-now.com"
    servicenow_username: "admin"
    servicenow_password: "%ml4Vs9RXE/s"
    servicenow_table: "sc_request"
    tenant_id: "195e8969-c853-47b4-83d0-36e044d83923"
    client_id: "e2e46ae3-2dee-4eed-a074-ddffd760ab2b"
    client_secret: "{{client_secret}}"
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"

  tasks:
    - name: Fetch pending requests from ServiceNow
      uri:
        url: "{{ servicenow_instance }}/api/now/table/{{ servicenow_table }}"
        method: GET
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        return_content: yes
      register: servicenow_response

    - name: Display request details
      debug:
        msg: |
          {% for request in servicenow_response.json.result %}
          Request Number: {{ request.get('number', 'N/A') }}
          Requested License Type: {{ request.get('short_description', 'Not Provided') }}
          Status: {{ request.get('state', 'Pending') }}
          ------------------------------------------------
          {% endfor %}

    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response

    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"

    - name: Check License Availability in Azure
      uri:
        url: "{{ graph_api_endpoint }}/subscribedSkus"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        return_content: yes
      register: azure_license_response

    - name: Add dummy license data for testing
      set_fact:
        azure_license_response:
          json:
            value:
              - id: "dummy-license-1"
                skuPartNumber: "TEST_LICENSE_1"
                prepaidUnits:
                  enabled: 5
                consumedUnits: 3
              - id: "dummy-license-2"
                skuPartNumber: "TEST_LICENSE_2"
                prepaidUnits:
                  enabled: 10
                consumedUnits: 7  

    - name: Display license availability
      debug:
        msg: "Available Licenses: {{ azure_license_response.json }}"

    # Auto-Approval Process
    - name: Approve all requests automatically
      set_fact:
        approved_requests: "{{ servicenow_response.json.result }}"

    - name: Update ServiceNow Request with Approval Status
      uri:
        url: "{{ servicenow_instance }}/api/now/table/{{ servicenow_table }}/{{ item.number }}"
        method: PATCH
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        body:
          state: "Approved"
        body_format: json
      with_items: "{{ approved_requests }}"
      when: approved_requests | length > 0
      register: approval_results

    - name: Display Approval Results
      debug:
        msg: "Approved requests: {{ approved_requests | map(attribute='number') | list }}"

    # License Assignment
    - name: Assign License (Simulated)
      set_fact:
        assigned_requests: "{{ approved_requests | selectattr('short_description', 'in', azure_license_response.json.value | map(attribute='skuPartNumber')) | list }}"

    - name: Update License Database (Simulated)
      debug:
        msg: "License assigned to {{ item.number }} for {{ item.short_description }}"
      with_items: "{{ assigned_requests }}"
      when: assigned_requests | length > 0

    # User Notification
    - name: Notify Users
      debug:
        msg: "Notification sent to user for request {{ item.number }} - Approved and Assigned"
      with_items: "{{ assigned_requests }}"

    # Request Closure
    - name: Close Approved Requests in ServiceNow
      uri:
        url: "{{ servicenow_instance }}/api/now/table/{{ servicenow_table }}/{{ item.number }}"
        method: PATCH
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        body:
          state: "Resolved"
        body_format: json
      with_items: "{{ assigned_requests }}"
      when: assigned_requests | length > 0

    - name: Confirm Request Closure
      debug:
        msg: "ServiceNow request {{ item.number }} is now resolved."
      with_items: "{{ assigned_requests }}"

    # Generate JSON Output for Approvals
    - name: Save Approval Data as JSON
      copy:
        content: "{{ approval_summary | to_nice_json }}"
        dest: "./approval_results.json"
      vars:
        approval_summary:
          approved_requests: "{{ approved_requests | map(attribute='number') | list }}"
          denied_requests: []
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          tenant_id: "{{ tenant_id }}"
          graph_api_endpoint: "{{ graph_api_endpoint }}"
