---
- name: Fetch Pending ServiceNow Requests
  hosts: localhost
  gather_facts: no
  vars:
    servicenow_instance: "https://dev247928.service-now.com"
    servicenow_username: "{{ service_now_username }}"
    servicenow_password: "{{ service_now_password }}"
    tenant_id: "{{ azure_tenant_id }}"
    client_id: "{{ azure_client_id }}"
    client_secret: "{{ azure_client_secret }}"
    graph_api_endpoint: "https://graph.microsoft.com/v1.0"
    default_user_email: "vidya1@gmail.com"
    default_user_name: "vidya1"
    default_mail_nickname: "vidya12"
    request_sys_id: ""
    ritm_sys_id: ""
  tasks:
    - name: Get Azure access token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: azure_auth_response
      
    - name: Set Azure token
      set_fact:
        access_token: "{{ azure_auth_response.json.access_token }}"
        
    - name: Check if user exists in Azure AD
      uri:
        url: "{{ graph_api_endpoint }}/users/{{ default_mail_nickname }}@amitomar63gmail.onmicrosoft.com"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 404]
        return_content: yes
      register: user_check
      ignore_errors: yes
      
    - name: Debug - Show User Check Results
      debug:
        var: user_check
        
    - name: Create User in Azure AD if Not Exists
      uri:
        url: "{{ graph_api_endpoint }}/users"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: true
          displayName: "{{ default_user_name }}"
          mailNickname: "{{ default_mail_nickname }}"
          userPrincipalName: "{{ default_mail_nickname }}@amitomar63gmail.onmicrosoft.com"
          passwordProfile:
            forceChangePasswordNextSignIn: true
            password: "Default@1234"
        body_format: json
        status_code: [201]
      register: user_creation
      when: user_check.status == 404
      
    # Added workflow to update ServiceNow after successful user creation
    - name: Set ServiceNow auth header
      set_fact:
        snow_auth: "{{ servicenow_username }}:{{ servicenow_password }}"
      
    - name: Update ServiceNow Request Item (RITM) status
      uri:
        url: "{{ servicenow_instance }}/api/now/table/sc_req_item/{{ ritm_sys_id }}"
        method: PATCH
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
        body_format: json
        body:
          stage: "complete"
          state: "3"  # 3 corresponds to "Closed Complete" in ServiceNow
        status_code: [200, 201]
        return_content: yes
      register: ritm_update_result
      when: user_creation is defined and user_creation.skipped is not defined
      
    - name: Debug RITM update result
      debug:
        var: ritm_update_result
      when: ritm_update_result is defined
        
    - name: Update ServiceNow Request status
      uri:
        url: "{{ servicenow_instance }}/api/now/table/sc_request/{{ request_sys_id }}"
        method: PATCH
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
        body_format: json
        body:
          request_state: "closed_complete"  # Closed Complete state
        status_code: [200, 201]
        return_content: yes
      register: request_update_result
      when: user_creation is defined and user_creation.skipped is not defined
      
    - name: Debug Request update result
      debug:
        var: request_update_result
      when: request_update_result is defined
      
    - name: Report success
      debug:
        msg: "User creation and ServiceNow update workflow completed successfully"
      when: user_creation is defined and user_creation.skipped is not defined and ritm_update_result is defined and request_update_result is defined
