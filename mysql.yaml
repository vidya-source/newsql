---
- name: MySQL Database Monitoring Playbook
  hosts: localhost
  become: true
  vars:
    mysql_host: "10.112.0.11"
    mysql_database: "information_schema"
    mysql_username: "mysqlauto"
    mysql_password: "mysqlAutomation"
    mysql_port: "3306"

  tasks:
    - name: Ensure required Python packages are installed
      pip:
        name:
          - mysql-connector-python
        state: present
      become: true
      
    - name: Check MySQL connection
      community.mysql.mysql_info:
        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_username }}"
        login_password: "{{ mysql_password }}"
        login_port: "{{ mysql_port }}"
      register: mysql_connection_result
      ignore_errors: true
      
    - name: Display MySQL connection status
      debug:
        msg: "‚úÖ Connected to MySQL Server successfully"
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined
      
    - name: Display MySQL connection error
      debug:
        msg: "‚ùå MySQL Connection Error: {{ mysql_connection_result.msg }}"
      when: mysql_connection_result is defined and mysql_connection_result.failed is defined
      
    - name: Check database space utilization
      community.mysql.mysql_query:
        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_username }}"
        login_password: "{{ mysql_password }}"
        login_db: "{{ mysql_database }}"
        query: >
          SELECT table_schema AS DatabaseName,
                 SUM(data_length + index_length) / 1024 / 1024 AS TotalSizeMB
          FROM information_schema.tables
          GROUP BY table_schema;
      register: db_space_results
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined

    - name: Display database space utilization
      debug:
        msg: "üìä Database Space Utilization: {{ item.DatabaseName }}: {{ item.TotalSizeMB | float | round(2) }} MB"
      loop: "{{ db_space_results.query_result if db_space_results is defined and db_space_results.query_result is defined else [] }}"
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined

    - name: Check for deadlocks
      community.mysql.mysql_query:
        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_username }}"
        login_password: "{{ mysql_password }}"
        login_db: "{{ mysql_database }}"
        query: "SHOW ENGINE INNODB STATUS;"
      register: deadlocks_result
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined

    - name: Parse deadlock information
      set_fact:
        deadlock_detected: "{{ deadlocks_result.query_result[0].Status is defined and 'LATEST DETECTED DEADLOCK' in deadlocks_result.query_result[0].Status }}"
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined and deadlocks_result is defined

    - name: Display deadlock status
      debug:
        msg: "üö® Deadlocks: {% if deadlock_detected | default(false) %}Deadlock detected{% else %}No deadlocks detected{% endif %}"
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined

    - name: Check MySQL event scheduler activities
      community.mysql.mysql_query:
        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_username }}"
        login_password: "{{ mysql_password }}"
        login_db: "{{ mysql_database }}"
        query: >
          SELECT event_name, status
          FROM information_schema.events
          WHERE status = 'ENABLED';
      register: events_result
      ignore_errors: yes
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined

    - name: Display MySQL Event Activities
      debug:
        msg: "üõ† MySQL Event Activities: {% if events_result.query_result | length > 0 %}{{ events_result.query_result }}{% else %}No active events found.{% endif %}"
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined and events_result is defined and events_result.failed is not defined

    - name: Check MySQL health status (connections)
      community.mysql.mysql_query:
        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_username }}"
        login_password: "{{ mysql_password }}"
        login_db: "{{ mysql_database }}"
        query: "SHOW STATUS LIKE 'Threads_connected';"
      register: health_result
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined

    - name: Display database health check
      debug:
        msg: "ü©∫ Database Health Check: Active Connections: {{ health_result.query_result[0].Value if health_result is defined and health_result.query_result is defined }}"
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined and health_result is defined and health_result.query_result is defined

    - name: Check MySQL version via command
      shell: "mysql --host={{ mysql_host }} --user={{ mysql_username }} --password={{ mysql_password }} -e 'SELECT VERSION();'"
      register: mysql_version_result
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined
      changed_when: false
      
    - name: Display MySQL version
      debug:
        msg: "‚ÑπÔ∏è MySQL Version: {{ mysql_version_result.stdout if mysql_version_result is defined }}"
      when: mysql_connection_result is defined and mysql_connection_result.failed is not defined and mysql_version_result is defined
