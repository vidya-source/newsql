---
- name: Check MySQL Connection in AWX
  hosts: localhost
  gather_facts: no
  vars:
    mysql_host: "10.112.0.11"
    mysql_user: "root"
    mysql_password: "mysqlAutomation"
    mysql_port: 3306

  tasks:
    # First check if mysql client is available on the AWX execution node
    - name: Check if MySQL client is installed
      command: which mysql
      register: mysql_client_check
      ignore_errors: yes
      changed_when: false

    - name: Show MySQL client status
      debug:
        msg: "MySQL client {{ 'is available' if mysql_client_check.rc == 0 else 'is NOT available' }}"

    # Try MySQL client connection if available
    - name: Test MySQL Connection with client
      shell: mysql -h{{ mysql_host }} -P{{ mysql_port }} -u{{ mysql_user }} -p{{ mysql_password }} -e "SELECT 1;"
      register: mysql_connection
      ignore_errors: yes
      when: mysql_client_check.rc == 0

    # Try Python MySQL connector as fallback
    - name: Install pymysql (if needed)
      pip:
        name: pymysql
        state: present
      register: pymysql_install
      ignore_errors: yes
      when: mysql_client_check.rc != 0

    - name: Test MySQL Connection with Python
      shell: |
        python3 -c "
        import pymysql
        try:
            conn = pymysql.connect(
                host='{{ mysql_host }}',
                user='{{ mysql_user }}',
                password='{{ mysql_password }}',
                port={{ mysql_port }},
                connect_timeout=5
            )
            print('Connection successful')
            conn.close()
            exit(0)
        except Exception as e:
            print(f'Connection failed: {e}')
            exit(1)
        "
      register: mysql_py_connection
      ignore_errors: yes
      when: mysql_client_check.rc != 0 and pymysql_install is success
      
    - name: Display Connection Result
      debug:
        msg: |
          {% if (mysql_connection is defined and mysql_connection.rc == 0) or 
                (mysql_py_connection is defined and mysql_py_connection.rc == 0) %}
          ✅ MySQL Connection Successful!
          {% elif mysql_client_check.rc == 0 %}
          ❌ MySQL Connection Failed with client!
          Error: {{ mysql_connection.stderr if mysql_connection.stderr is defined else 'Unknown error' }}
          {% else %}
          ❌ MySQL Connection Failed!
          {% if pymysql_install is success and mysql_py_connection is defined %}
          Python connection error: {{ mysql_py_connection.stderr if mysql_py_connection.stderr is defined else 'Unknown error' }}
          {% else %}
          MySQL client not available and Python connector couldn't be used.
          {% endif %}
          {% endif %}
          
    - name: Set Connection Status Fact
      set_fact:
        mysql_connection_status: "{{ (mysql_connection is defined and mysql_connection.rc == 0) or 
                                    (mysql_py_connection is defined and mysql_py_connection.rc == 0) }}"
        
    - name: Fail if Connection Unsuccessful
      fail:
        msg: "Failed to connect to MySQL server at {{ mysql_host }}:{{ mysql_port }}"
      when: not mysql_connection_status
