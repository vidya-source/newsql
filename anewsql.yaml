---
- name: MySQL Server Health Check
  hosts: my_servers
  become: yes
  vars:
    mysql_user: "{{mysql_user}}"
    mysql_password: "{{mysql_password}}"
    mysql_db: "{{mysql_db}}"

  tasks:
    - name: Check if MySQL service is running
      service:
        name: mysql
        state: started

    - name: Get database space utilization
      command: "mysql -u {{ mysql_user }} -p{{ mysql_password }} -e 'SELECT table_schema AS \"Database\", SUM(data_length + index_length) / 1024 / 1024 AS \"Size (MB)\" FROM information_schema.tables GROUP BY table_schema;'"
      register: db_space
      changed_when: false
    - name: Print database space utilization
      debug:
        msg: "{{ db_space.stdout }}"

    - name: Check MySQL status for threads connected
      command: "mysql -u {{ mysql_user }} -p{{ mysql_password }} -e 'SHOW STATUS LIKE \"Threads_connected\";'"
      register: threads_status
      changed_when: false
    - name: Print threads status
      debug:
        msg: "{{ threads_status.stdout }}"

    - name: Check MySQL uptime
      command: "mysql -u {{ mysql_user }} -p{{ mysql_password }} -e 'SHOW GLOBAL STATUS LIKE \"Uptime\";'"
      register: uptime_status
      changed_when: false
    - name: Print uptime status
      debug:
        msg: "{{ uptime_status.stdout }}"

    - name: Check for slow queries log
      command: "mysql -u {{ mysql_user }} -p{{ mysql_password }} -e 'SHOW VARIABLES LIKE \"slow_query_log\";'"
      register: slow_query_log
      changed_when: false
    - name: Print slow query log status
      debug:
        msg: "{{ slow_query_log.stdout }}"

    - name: Check for deadlocks
      command: "mysql -u {{ mysql_user }} -p{{ mysql_password }} -e 'SHOW ENGINE INNODB STATUS;'"
      register: innodb_status
      changed_when: false
    - name: Print innodb status for deadlocks
      debug:
        msg: "{{ innodb_status.stdout }}"

    - name: Check for MySQL scheduled events
      command: "mysql -u {{ mysql_user }} -p{{ mysql_password }} -e 'SHOW EVENTS;'"
      register: scheduled_events
      changed_when: false
    - name: Print scheduled events
      debug:
        msg: "{{ scheduled_events.stdout }}"
